class KeyboardShortcut{constructor(listeners){this._D=document.body;this._listeners=listeners||{};if(!this._listeners.keydownHandler){this._listeners.keydownHandler=(e)=>{const code=(e.code||e.key),keyCode=code.substring(code.startsWith("Key")?3:0),keys=[];e.ctrlKey&&keys.push('ctrl');e.shiftKey&&keys.push('shift');e.altKey&&keys.push('alt');e.metaKey&&keys.push('meta');keys.push(keyCode.toLowerCase());const k=keys.join("+"),l=this._listeners[k];if(l){l(e),l.propagate&&e.stopPropagation(),e.preventDefault()}}}this.bindKeyDown=this._listeners.keydownHandler}setKeys(el,call,keydownCall){const element=this._el(el)||this._D;let hotKeys={code:''},sequence={},isDone=false,doneFunc=(target)=>{hotKeys.keys=Object.keys(sequence).concat(hotKeys.code);call&&call(hotKeys,target)};this._listeners.hotKeysHandler=(e)=>{const{type}=e,ev=e;if("keydown"===type){isDone=false,hotKeys.alt=e.altKey,hotKeys.shift=e.shiftKey,hotKeys.ctrl=e.ctrlKey,hotKeys.meta=e.metaKey,hotKeys.keyCode=e.keyCode,hotKeys.code=e.code.substring(e.code.startsWith("Key")?3:0);["ctrl","shift","alt","meta"].map(k=>{if(ev[k+'Key']&&!(k in sequence))sequence[k]=Object.keys(sequence).length});keydownCall&&doneFunc(e.currentTarget)}else if("keyup"===type){if(Object.keys(sequence).length==0)return;if(isDone){doneFunc(e.currentTarget);sequence={};return}isDone=true}};return this._addEvent(element,"keydown",this._listeners.hotKeysHandler)._addEvent(element,"keyup",this._listeners.hotKeysHandler)}closeKeys(el){const element=this._el(el)||this._D;this._listeners.hotKeysHandler&&this._removeEvent(element,"keydown",this._listeners.hotKeysHandler)._removeEvent(element,"keyup",this._listeners.hotKeysHandler);delete this._listeners['hotKeysHandler']}on(el,keys,l,propagate){const ks=this._compose(keys);this._listeners[ks]=l,this._listeners[ks].propagate=propagate;if(el){const element=this._el(el);this._addEvent(element,"keydown",this._listeners.keydownHandler)}return this}off(el,keys){const ks=this._compose(keys||"");if(ks)delete this._listeners[ks];if(el){const element=this._el(el);this._removeEvent(element,"keydown",this._listeners.keydownHandler)}return this}_addEvent(el,type,l){el?.addEventListener(type,l,false);return this}_removeEvent(el,type,l){el?.removeEventListener(type,l,false);return this}_compose(keys){if(typeof(keys)==="string"){return keys.toLowerCase()}const h=[];keys.ctrl&&h.push('ctrl');keys.shift&&h.push('shift');keys.alt&&h.push('alt');keys.meta&&h.push('meta');h.push(keys.code.toLowerCase());return h.join("+")}_el(el){return typeof(el)==="string"?document.querySelector(el):el}}(function(W,factory){if(typeof define==='function'&&define.amd){define(factory)}else if(typeof exports==='object'){module.exports=factory()}else{W.ShortcutKeys=factory()}})(this,function(){const keyboardListeners={};const ShortcutKeys=new KeyboardShortcut(keyboardListeners);return ShortcutKeys})
